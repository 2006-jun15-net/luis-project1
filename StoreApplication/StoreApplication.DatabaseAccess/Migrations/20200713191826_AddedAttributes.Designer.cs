// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApplication.DatabaseAccess.Models;

namespace StoreApplication.DatabaseAccess.Migrations
{
    [DbContext(typeof(StoreApplicationDBContext))]
    [Migration("20200713191826_AddedAttributes")]
    partial class AddedAttributes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoreApplication.Domain.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Groceries"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Sporting Goods"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "School Supplies"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Toys"
                        });
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Head of cabbage",
                            ImageThumbnailUrl = "\\Images\\Cabbage.jpg",
                            ImageUrl = "\\Images\\Cabbage.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "Cabbage",
                            Price = 1.99m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "High-Quality aluminum baseball bat",
                            ImageThumbnailUrl = "\\Images\\BaseballBat.jpg",
                            ImageUrl = "\\Images\\BaseballBat.jpg",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "Baseball Bat",
                            Price = 36.99m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Description = "Multi-purpose college ruled notebook",
                            ImageThumbnailUrl = "\\Images\\Notebook.jpg",
                            ImageUrl = "\\Images\\Notebook.jpg",
                            IsInStock = true,
                            IsOnSale = true,
                            Name = "College Ruled Notebook",
                            Price = 2.99m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Description = "Apple IPhone SE",
                            ImageThumbnailUrl = "\\Images\\IphoneSE.png",
                            ImageUrl = "\\Images\\IponeSE.png",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "IPhone",
                            Price = 399.99m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            Description = "Lego Star Wars Kylo Ren's Shuttle",
                            ImageThumbnailUrl = "\\Images\\LegoKyloRen.jpg",
                            ImageUrl = "\\Images\\LegoKyloRen.jpg",
                            IsInStock = true,
                            IsOnSale = false,
                            Name = "Lego Set: Kylo Ren Shuttle",
                            Price = 129.95m
                        });
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.OrderDetail", b =>
                {
                    b.HasOne("StoreApplication.Domain.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApplication.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.Product", b =>
                {
                    b.HasOne("StoreApplication.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreApplication.Domain.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("StoreApplication.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
